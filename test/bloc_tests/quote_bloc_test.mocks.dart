// Mocks generated by Mockito 5.4.4 from annotations
// in quotes_slide_show/test/bloc_tests/quote_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:quotes_slide_show/model/quote.dart' as _i2;
import 'package:quotes_slide_show/model/services/api_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeQuote_0 extends _i1.SmartFake implements _i2.Quote {
  _FakeQuote_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<String> get apiUrls => (super.noSuchMethod(
        Invocation.getter(#apiUrls),
        returnValue: <String>[],
      ) as List<String>);

  @override
  List<_i2.Quote> get localQuotes => (super.noSuchMethod(
        Invocation.getter(#localQuotes),
        returnValue: <_i2.Quote>[],
      ) as List<_i2.Quote>);

  @override
  _i4.Future<_i2.Quote> fetchQuoteFromApi(String? apiUrl) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchQuoteFromApi,
          [apiUrl],
        ),
        returnValue: _i4.Future<_i2.Quote>.value(_FakeQuote_0(
          this,
          Invocation.method(
            #fetchQuoteFromApi,
            [apiUrl],
          ),
        )),
      ) as _i4.Future<_i2.Quote>);

  @override
  _i4.Future<_i2.Quote> fetchFastestQuote() => (super.noSuchMethod(
        Invocation.method(
          #fetchFastestQuote,
          [],
        ),
        returnValue: _i4.Future<_i2.Quote>.value(_FakeQuote_0(
          this,
          Invocation.method(
            #fetchFastestQuote,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Quote>);
}
